{"version":3,"sources":["components/Round.js","components/AddRound.js","components/Rounds.js","components/LoginForm.js","querys.js","useTimeout.js","App.js","index.js"],"names":["Round","props","show","console","log","round","allPointsQuery","loading","react_default","a","createElement","error","savedState","uploadingPoints","buttonDisabled","players","users","trackIndex","allPoints","data","order","slice","length","addNewTrack","changeTrack","maxTrackIndex","arr","temp","forEach","element","maxValue","map","play","handleTrackIndexChangeClick","index","handlePointChangeClick","points","user","updatePoint","id","sort","u1","u2","_loop","i","filter","point","u1pointArray","u2pointArray","v","u1p","u2p","_ret","trackNumbers","player","push","key","className","location","name","text","onClick","playerPlays","p1","p2","total","reduce","tot","orderOf","username","deleteLastTrack","finishRound","disabled","uploadPoints","AddRound","allLocations","allLocationsQuery","allUsers","allUsersQuery","currentLocation","currentPlayers","handleLocationClick","handleUserClick","onSubmit","event","preventDefault","startNewRound","type","Rounds","result","handleRoundClick","setRound","rounds","allRounds","r1","r2","date","colSpan","d","Date","dateString","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","LoginForm","_useState","useState","_useState2","Object","slicedToArray","setUsername","_useState3","_useState4","password","setPassword","login","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","doLogin","stop","_x","apply","this","arguments","placeholder","value","onChange","target","LOGIN","gql","_templateObject","ALL_LOCATIONS","_templateObject2","_templateObject3","ALL_ROUNDS","_templateObject4","ALL_POINTS","_templateObject5","ALL_USERS","_templateObject6","ADD_ROUND","_templateObject7","_templateObject8","_templateObject9","ADD_CACHED_POINTS","_templateObject10","_templateObject11","useTimeout","doLogout","logoutTimeout","logout","setTimeouts","setTimeout","useEffect","events","resetTimeout","clearTimeout","window","addEventListener","App","currentRoundId","setCurrentRoundId","currentRound","setCurrentRound","_useState5","_useState6","setCurrentPlayers","_useState7","_useState8","setCurrentLocation","_useState9","_useState10","errorMessage","setErrorMessage","_useState11","_useState12","setTrackIndex","_useState13","_useState14","token","setToken","_useState15","_useState16","_useState17","_useState18","page","setPage","client","useApolloClient","_useState19","_useState20","setSavedState","_useState21","_useState22","uploadingPointsState","setUploadingPointsState","localStorage","getItem","response","tusername","loginMutation","variables","sent","setItem","resetStore","_x2","clear","sessionTimeout","handleError","graphQLErrors","message","networkError","errorArray","errors","addCachedPointsMutation","useMutation","onError","update","store","serverPoints","addCachedPoints","localPoints","readQuery","query","roundId","serverPoint","foundMatch","localPoint","addRoundMutation","dataInStore","addedRound","addRound","concat","writeQuery","addPointToCache","userId","originalState","objectSpread","newPoint","__typename","crypto","randomBytes","toString","deleteLastTrackFromCache","i1","i2","uploadPointsFromCacheToServer","_ref2","_callee2","_context2","abrupt","pointIds","userIds","trackIndexes","t0","_ref3","_callee3","currentUsers","_context3","_ref4","_callee4","_context4","_ref5","_callee5","_context5","_x3","_x4","useQuery","skip","allRoundsQuery","_ref6","_callee6","_context6","locationId","Container","components_LoginForm","components_AddRound","includes","components_Rounds","components_Round","wshost","origin","replace","wsuri","wsLink","WebSocketLink","uri","options","reconnect","httpLink","createHttpLink","authLink","setContext","_","headers","authorization","link","split","_getMainDefinition","getMainDefinition","kind","operation","ApolloClient","cache","InMemoryCache","ReactDOM","render","react_apollo_esm","ApolloContext","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1fa5278c.chunk.js","sourcesContent":["import React from 'react';\nimport { SSL_OP_COOKIE_EXCHANGE } from 'constants';\n\nconst maxValue = (arr) => {\n  let temp = -1\n  arr.forEach(element => {\n    if (temp < element) {\n      temp = element\n    }\n  });\n  return temp\n}\n\nconst Round = (props) => {\n  if (!props.show) {\n    return null\n  }\n  console.log('round', props.round)\n  if (!props.round) {\n    console.log('no round chosen')\n    return null\n  }\n  if (props.allPointsQuery.loading) {\n    console.log('loading')\n    return <div>loading...</div>\n  }\n  if (props.allPointsQuery.error) {\n    console.log('error', props.allPointsQuery.error)\n    return <div>error...</div>\n  }\n  console.log('saved state and uploading points state', props.savedState, props.uploadingPoints)\n  const savedState = props.savedState\n  const uploadingPoints = props.uploadingPoints\n  const buttonDisabled = savedState || uploadingPoints\n  const players = props.round.users\n  const trackIndex = props.trackIndex\n  const allPoints = props.allPointsQuery.data.allPoints\n  const round = props.round\n  let order = players.slice()\n\n  //console.log('all points query', props.allPointsQuery)\n  //console.log('players ', props.round.users)\n  console.log('all points', allPoints)\n  if (allPoints.length === 0) {\n    console.log('all points length 0')\n    props.addNewTrack()\n    props.changeTrack(0)\n  }\n  const maxTrackIndex = maxValue(allPoints.map(play => play.trackIndex))\n  if (trackIndex === -1) {\n    props.changeTrack(maxTrackIndex)\n    return null\n  }\n  const handleDeleteLastTrackClick = () => {\n    props.deleteLastTrack()\n  }\n  const handleRoundFinishClick = () => {\n    props.finishRound()\n  }\n  const handleUploadPointsClick = () => {\n    props.uploadPoints()\n  }\n  const handleTrackIndexChangeClick = (index) =>\n    () => {\n      props.changeTrack(index)\n      if (maxTrackIndex + 1 === index) {\n        props.addNewTrack()\n      }\n    }\n  const handlePointChangeClick = (points, user) =>\n    () => {\n      if (points > -1) {\n        props.updatePoint(points, user.id)\n      }\n    }\n  order.sort((u1, u2) => {\n    for (let i = trackIndex; i >= 0; i--) {\n      const temp = allPoints.filter(point => point.trackIndex === i)\n      const u1pointArray = temp.filter(point => point.user.id === u1.id)\n      const u2pointArray = temp.filter(point => point.user.id === u2.id)\n      if (u1pointArray.length === 0 || u2pointArray.length === 0) {\n        return 0\n      }\n      const u1p = u1pointArray[0].points\n      const u2p = u2pointArray[0].points\n      if (u1p > u2p) {\n        return 1\n      } else if (u1p < u2p) {\n        return -1\n      }\n    }\n    return 0\n  })\n  console.log('order', order)\n  const orderOf = (player) => {\n    for (let i = 0; i < order.length; i++) {\n      if (player === order[i]) {\n        return i + 1 + '.'\n      }\n    }\n    return 'err'\n  }\n\n\n  const trackNumbers = []\n  console.log('max track index', maxTrackIndex)\n  if (maxTrackIndex === 0) {\n    players.forEach(player => {\n\n    })\n  }\n  for (let i = 0; i < maxTrackIndex + 1; i++) {\n    trackNumbers.push(<th key={i}>{i + 1}</th>)\n  }\n  console.log('track numbers th', trackNumbers)\n  return (\n    <div className=\"App\">\n      {savedState && <div>saved state</div>}\n      {!savedState && <div><strong>unsaved state</strong></div>}\n      <div>\n        <h3>{round.location.name}</h3>\n        <h3>\n          <div className=\"row\">\n            <button text='-' onClick={handleTrackIndexChangeClick(trackIndex - 1)}>-</button>\n            Track {trackIndex + 1}\n            <button text='+' onClick={handleTrackIndexChangeClick(trackIndex + 1)}>+</button>\n          </div>\n        </h3>\n        <table className=\"ui celled table\">\n          <thead>\n            <tr>\n              <th>order</th><th>player</th>\n              {\n                trackNumbers\n              }\n              <th>total</th>\n            </tr>\n          </thead>\n          <tbody>\n\n            {players.map(player => {\n              const playerPlays = allPoints.filter(point => point.user.id === player.id)\n              if (playerPlays) {\n                playerPlays.sort((p1, p2) => p1.trackIndex - p2.trackIndex)\n                const total = playerPlays.length === 0 ?\n                  0 : playerPlays.map(play => play.points).reduce((tot, point) => tot + point)\n                return (\n                  < tr key={player.id} >\n                    <td key='order'>{orderOf(player)}</td>\n                    <td key={player.username}>{player.username}</td>\n                    {\n                      playerPlays.map(play => {\n                        if (play.trackIndex === trackIndex) {\n                          return (<td key={play.trackIndex + player.id}>\n                            <strong>\n                              <button className=\"ui button\" onClick={handlePointChangeClick(play.points - 1, play.user)}>-</button>\n                              {play.points}\n                              <button className=\"ui button\" onClick={handlePointChangeClick(play.points + 1, play.user)}>+</button>\n                            </strong>\n                          </td>)\n                        } else {\n                          return (<td key={play.trackIndex + player.id}>{play.points}</td>)\n                        }\n                      })\n                    }\n                    <td>{total}</td>\n                  </tr>\n                )\n              } else return (\n                <tr><td>no plays</td></tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n      <br />\n      <div className=\"row\">\n        <button className=\"ui button\" text='delete last track' onClick={handleDeleteLastTrackClick}>delete last track</button>\n        <button className=\"ui button\" text='finish round' onClick={handleRoundFinishClick}>finnish round</button>\n        <button className=\"ui button\" disabled={buttonDisabled} onClick={handleUploadPointsClick}>upload points</button>\n      </div>\n      {false && <div>round is finnished</div>}\n    </div>\n  )\n}\n\nexport default Round","import React from 'react'\n\nconst AddRound = (props) => {\n  if (!props.show) {\n    return null\n  }\n  const allLocations = props.allLocationsQuery.data.allLocations\n  const allUsers = props.allUsersQuery.data.allUsers\n  const currentLocation = props.currentLocation\n  const currentPlayers = props.currentPlayers\n\n  const startNewRound = (event) => {\n    console.log('start new round with', currentLocation, currentPlayers)\n    event.preventDefault()\n    props.startNewRound()\n  }\n\n  if (props.allLocationsQuery.loading || props.allUsersQuery.loading) {\n    console.log('loading')\n    return <div>loading...</div>\n  }\n  if (props.allLocationsQuery.error || props.allUsersQuery.error) {\n    console.log('errors', props.allUsersQuery.error, props.allLocationsQuery.error)\n    return <div>error...</div>\n  }\n  if (!currentLocation) {\n    // select location\n    return (\n      <div>\n        <h3>Select location</h3>\n        <div>\n          <table className=\"ui celled table\">\n            <thead>\n              <tr key='header'>\n                <th>locations</th>\n              </tr>\n            </thead>\n            <tbody>\n              {allLocations.map(location =>\n                <tr key={location.id}>\n                  <td className='ui button' onClick={props.handleLocationClick(location)}>{location.name}</td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    )\n  }\n  return (\n    <div>\n      <h3>New round</h3>\n      <div onClick={props.handleLocationClick(currentLocation)}>\n        {currentLocation.name}\n      </div>\n      <div>\n        <table className=\"ui celled table\">\n          <thead>\n            <tr key='header'>\n              <th>selected players</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              {currentPlayers.map(user =>\n                <td className='ui button' key={user.id} onClick={props.handleUserClick(user)}>{user.username}</td>\n              )}\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      {\n        currentPlayers.length > 0 && currentLocation &&\n        <div>\n          <form onSubmit={startNewRound}>\n            <button className=\"ui button\" type='submit'>start</button>\n          </form>\n        </div>\n      }\n      <div>\n        <table className=\"ui celled table\">\n          <thead>\n            <tr>\n              <th>all players</th>\n            </tr>\n          </thead>\n          <tbody>\n            {allUsers.map(user =>\n              <tr key={user.id}>\n                <td className='ui button' onClick={props.handleUserClick(user)}>{user.username}</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n\n    </div>\n  )\n}\n\nexport default AddRound","import React from 'react'\n\nconst Rounds = (props) => {\n  if (!props.show) {\n    return null\n  }\n  if (props.result.loading) {\n    return <div>loading...</div>\n  }\n  if (props.result.error) {\n    console.log('error', props.result.error)\n    return <div>error...</div>\n  }\n  const handleRoundClick = (round) =>\n    () => {\n      console.log('round clicked', round)\n      props.setRound(round)\n    }\n  const rounds = props.result.data.allRounds\n  rounds.sort((r1, r2) => r2.date - r1.date)\n  if (!rounds) {\n    return null\n  }\n  return (\n    <div>\n      <table className=\"ui celled table\">\n        <thead>\n          <tr key='header'>\n            <th>location</th><th>date</th><th colSpan=\"99\">players</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rounds.map(round => {\n            const d = new Date(round.date)\n            const dateString = d.getDate() + '.' + (d.getMonth() + 1) + '.' + d.getFullYear() + ' ' + d.getHours() + ':' + d.getMinutes() + ':' + d.getSeconds()\n            return (\n              <tr onClick={handleRoundClick(round)} key={round.id}>\n                <td>{round.location.name}</td><td>{dateString}</td>\n                {round.users.map(user =>\n                  <td key={user.username}>{user.username}</td>\n                )}\n              </tr>\n            )\n          }\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Rounds","import React, { useState } from 'react'\n\nconst LoginForm = (props) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  if (!props.show) {\n    return null\n  }\n  const login = async (event) => {\n    event.preventDefault()\n    props.doLogin(username, password)\n  }\n  const onPasswordChange = (event) => {\n    setPassword(event.target.value)\n  }\n  const onUsernameChange = (event) => {\n    setUsername(event.target.value)\n  }\n  return (\n    <div className='login'>\n      <h2>Login to application</h2>\n      <form onSubmit={login} className=\"ui form\">\n        <div className=\"field\">\n          <label>Username</label>\n          <input id='username'\n            type=\"text\"\n            placeholder=\"username\"\n            value={username}\n            onChange={onUsernameChange} />\n        </div>\n        <div className=\"field\">\n          <label>Password</label>\n          <input id='password'\n            type=\"password\"\n            placeholder=\"password\"\n            value={password}\n            onChange={onPasswordChange} />\n        </div>\n        <button className=\"ui button\" type=\"submit\">\n          login\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default LoginForm","import gql from \"graphql-tag\";\nexport const LOGIN = gql`\nmutation login($username: String!, $password: String! ){\n  login(username: $username, password: $password){\n    token\n    username\n  }\n  \n}\n`\nexport const ALL_FRIENDS = gql`\n{\n  me {\n    username\n    id\n    friends{username, id}\n  }\n}\n`\nexport const ALL_LOCATIONS = gql`\n{\n  allLocations {\n    name\n    id\n  }\n}  \n`\nexport const ALL_ROUNDS = gql`\n{\n  allRounds {\n    users{username, id}\n    location{name, id}\n    date\n    id\n  }\n}\n`\nexport const ALL_POINTS = gql`\n  query ($roundId: ID!) {\n    allPoints(\n      roundId: $roundId\n    ){\n    trackIndex,\n    user{id},\n    round{id},\n    points,\n    id\n    }\n  }\n`\nexport const ALL_USERS = gql`\nquery {\n  allUsers{\n    username,\n    id\n  }\n}\n`\nexport const ME = gql`\n{\n  me{\n    username\n    id\n  }\n}\n`\nexport const ADD_LOCATION = gql`\n  mutation createLocation($name: String!){\n    addLocation(\n      name: $name\n    ){\n      id, name\n    }\n  }\n`\nexport const ADD_ROUND = gql`\n  mutation createRound($locationId: ID!, $userIds: [ID!]!){\n    addRound(\n      locationId: $locationId\n      userIds: $userIds\n    ){\n      location{\n        name\n        id\n      }\n      users{\n        username\n        id\n      }\n      date\n      id\n    }\n  }\n`\nexport const ADD_PLAY = gql`\n  mutation createPlay($roundId: ID!, $playNumber:Int!){\n    addPlay(\n      roundId: $roundId,\n      playNumber: $playNumber\n    ){\n      id\n    }\n  }\n`\n\nexport const ADD_CACHED_POINTS = gql`\n  mutation addCachedPoints($roundId: ID!, $pointIds: [ID!]!, $userIds: [ID!]!, $trackIndexes:[Int!]!, $points: [Int!]!){\n    addCachedPoints(\n      roundId: $roundId,\n      pointIds: $pointIds,\n      userIds: $userIds,\n      trackIndexes: $trackIndexes,\n      points: $points\n    ){\n      trackIndex,\n      user{id},\n      round{id},\n      points,\n      id\n    }\n  }\n`\n","import React, { useState, useEffect } from \"react\";\n\nfunction useTimeout(doLogout) {\n  const signoutTime = 1000 * 60 * 60\n  let logoutTimeout;\n\n  const warn = () => {\n    console.log('Warning');\n  };\n  const logout = () => {\n    console.log('You have been loged out');\n    doLogout()\n  }\n\n  const setTimeouts = () => {\n    //    warnTimeout = setTimeout(warn, warningTime);\n    logoutTimeout = setTimeout(logout, signoutTime);\n  };\n\n  const clearTimeouts = () => {\n    //  if (warnTimeout) clearTimeout(warnTimeout);\n    if (logoutTimeout) clearTimeout(logoutTimeout);\n  };\n\n  useEffect(() => {\n    const events = [\n      'load',\n      'mousedown',\n      'click',\n      'scroll',\n      'keypress'\n    ];\n\n    const resetTimeout = () => {\n      clearTimeouts();\n      setTimeouts();\n    };\n\n    for (let i in events) {\n      window.addEventListener(events[i], resetTimeout);\n    }\n\n    setTimeouts();/*\n    return () => {\n      console.log('loop called')\n      for (let i in events) {\n        window.removeEventListener(events[i], resetTimeout);\n        clearTimeouts();\n      }\n    }*/\n  }, []);\n}\n\nexport default useTimeout","import React, { useState, useEffect } from 'react';\nimport { useQuery, useMutation, useApolloClient } from 'react-apollo-hooks'\nimport { Container, Menu, Router } from 'semantic-ui-react'\nimport Round from './components/Round'\nimport AddRound from './components/AddRound'\nimport Rounds from './components/Rounds'\nimport LoginForm from './components/LoginForm'\nimport Friends from './components/Friends'\nimport Me from './components/Me'\nimport crypto from 'crypto'\nimport {\n  ALL_FRIENDS,\n  ALL_LOCATIONS,\n  ALL_ROUNDS,\n  ALL_POINTS,\n  ALL_USERS,\n  LOGIN,\n  ADD_LOCATION,\n  ADD_ROUND,\n  ADD_CACHED_POINTS,\n} from './querys'\nimport useTimeout from './useTimeout'\n\nconst App = (props) => {\n  const [currentRoundId, setCurrentRoundId] = useState(null)\n  const [currentRound, setCurrentRound] = useState(null)\n  const [currentPlayers, setCurrentPlayers] = useState([])\n  const [currentLocation, setCurrentLocation] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [trackIndex, setTrackIndex] = useState(0)\n  const [token, setToken] = useState(null)\n  const [username, setUsername] = useState(null)\n  const [page, setPage] = useState(\"main\")\n  const client = useApolloClient()\n  const [savedState, setSavedState] = useState(true)\n  const [uploadingPointsState, setUploadingPointsState] = useState(false)\n\n  useEffect(() => {\n    const username = localStorage.getItem('username')\n    const token = localStorage.getItem('token')\n    console.log('restore logged user', username, token)\n    setToken(token)\n    setUsername(username)\n  }, [])\n\n  const getRandomId = () => {\n    return crypto.randomBytes(16).toString(\"hex\")\n  }\n\n  const doLogin = async (username, password) => {\n    const response = await loginMutation({\n      variables: {\n        username,\n        password\n      }\n    })\n    const token = response.data.login.token\n    const tusername = response.data.login.username\n    console.log('login token and username', token, tusername)\n    if (token) {\n      //localStorage.setItem('token', token)\n      setToken(token)\n      setUsername(username)\n      localStorage.setItem('username', tusername)\n      localStorage.setItem('token', token)\n      setPage('main')\n      client.resetStore()\n    }\n  }\n\n  const doLogout = () => {\n    console.log('logout')\n    setToken(null)\n    setUsername(null)\n    localStorage.clear()\n    client.resetStore()\n  }\n  useTimeout(doLogout)\n  if (props.sessionTimeout) {\n    console.log('session time out received')\n    doLogout()\n  }\n  const handleError = (error) => {\n    console.log('error', error)\n    if (error.graphQLErrors.length > 0) {\n      setErrorMessage(error.graphQLErrors[0].message)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 10000)\n    }\n    else if (error.networkError) {\n      const errorArray = error.networkError.result.errors\n      if (errorArray && errorArray.length > 0) {\n        setErrorMessage(errorArray[0].message)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 10000)\n      }\n    }\n  }\n\n\n  // uploads cached points to server\n  const addCachedPointsMutation = useMutation(ADD_CACHED_POINTS, {\n    onError: handleError,\n    update: (store, response) => {\n      const serverPoints = response.data.addCachedPoints\n      let dataInStore = store.readQuery({\n        query: ALL_POINTS,\n        variables: {\n          roundId: currentRoundId\n        },\n      })\n      const localPoints = dataInStore.allPoints\n      setSavedState(true)\n      console.log('local and server lengths', localPoints.length, serverPoints.length)\n      if (serverPoints.length !== localPoints.length) {\n        setSavedState(false)\n\n      } else {\n        serverPoints.forEach(serverPoint => {\n          let foundMatch = false\n          localPoints.forEach(localPoint => {\n            if (serverPoint.round.id === localPoint.round.id\n              && serverPoint.user.id === localPoint.user.id\n              && serverPoint.trackIndex === localPoint.trackIndex\n              && serverPoint.points === localPoint.points) {\n              foundMatch = true\n              console.log('found match')\n              return\n            }\n          })\n          if (!foundMatch) {\n            console.log('set saved state to false')\n            setSavedState(false)\n          }\n        });\n      }\n      console.log('local and server points', localPoints, serverPoints)\n    }\n  })\n\n  const addRoundMutation = useMutation(ADD_ROUND, {\n    onError: handleError,\n    update: (store, response) => {\n      let dataInStore = store.readQuery({\n        query: ALL_ROUNDS\n      })\n      const addedRound = response.data.addRound\n      const temp = dataInStore.allRounds.filter(round => round.id !== addedRound.id).concat(addedRound)\n      client.writeQuery({\n        query: ALL_ROUNDS,\n        data: { allRounds: temp }\n      })\n    }\n  })\n  const loginMutation = useMutation(LOGIN, {\n    onError: handleError\n  })\n  const addPointToCache = (roundId, userId, trackIndex, points) => {\n    const originalState = client.readQuery({\n      query: ALL_POINTS,\n      variables: {\n        roundId: roundId\n      }\n    })\n    console.log('original state', originalState.allPoints)\n    const temp = originalState.allPoints.filter(point =>\n      point.user.id === userId && point.trackIndex === trackIndex)\n    console.log('found data from cache', temp.length > 0 ? temp : false)\n    if (temp.length > 0) {\n      const data = temp[0]\n      console.log('new state', originalState.allPoints\n        .filter(point => point.id !== data.id)\n        .concat({\n          ...data,\n          points\n        }))\n      client.writeQuery({\n        query: ALL_POINTS,\n        variables: {\n          roundId: roundId\n        },\n        data: {\n          allPoints: originalState.allPoints\n            .filter(point => point.id !== data.id)\n            .concat({\n              ...data,\n              points\n            })\n        }\n      })\n    } else {\n      const newPoint = {\n        round: { id: roundId, __typename: \"Round\" },\n        user: { id: userId, __typename: \"User\" },\n        trackIndex,\n        points,\n        id: getRandomId(),\n        __typename: 'Point'\n      }\n      console.log('add new point', newPoint)\n      client.writeQuery({\n        query: ALL_POINTS,\n        variables: {\n          roundId: roundId\n        },\n        data: {\n          allPoints: originalState.allPoints\n            .concat(newPoint)\n        }\n      })\n    }\n    setSavedState(false)\n    /*\n    const mutatedState = client.readQuery({\n      query: ALL_POINTS,\n      variables: {\n        roundId: roundId\n      }\n    })\n    console.log('mutated state', mutatedState.allPoints)\n    */\n  }\n  const deleteLastTrackFromCache = (roundId) => {\n    const originalState = client.readQuery({\n      query: ALL_POINTS,\n      variables: {\n        roundId: roundId\n      }\n    })\n    if (originalState.allPoints.length === 0) {\n      return\n    }\n    console.log('original state', originalState.allPoints)\n    const maxTrackIndex = originalState.allPoints\n      .map(point => point.trackIndex)\n      .sort((i1, i2) => i2 - i1)[0]\n    console.log('maxTrackindex', maxTrackIndex)\n    client.writeQuery({\n      query: ALL_POINTS,\n      variables: {\n        roundId: roundId\n      },\n      data: {\n        allPoints: originalState.allPoints.filter(point => point.trackIndex !== maxTrackIndex)\n      }\n    })\n    setSavedState(false)\n    if (trackIndex >= maxTrackIndex) {\n      setTrackIndex(maxTrackIndex - 1)\n    }\n    /*\n    const mutatedState = client.readQuery({\n      query: ALL_POINTS,\n      variables: {\n        roundId: roundId\n      }\n    })\n    console.log('mutated state', mutatedState.allPoints)\n    */\n  }\n\n  const uploadPointsFromCacheToServer = async () => {\n    const originalState = client.readQuery({\n      query: ALL_POINTS,\n      variables: {\n        roundId: currentRoundId\n      }\n    })\n    if (originalState.allPoints.length === 0) {\n      return\n    }\n    const allPoints = originalState.allPoints\n    console.log('upload points from cache to server', allPoints)\n    try {\n      await setUploadingPointsState(true)\n      //await setSavedState(true)\n      let response = await addCachedPointsMutation({\n        variables: {\n          roundId: currentRoundId,\n          pointIds: allPoints.map(point => point.id.toString()),\n          userIds: allPoints.map(point => point.user.id.toString()),\n          trackIndexes: allPoints.map(point => point.trackIndex),\n          points: allPoints.map(point => point.points)\n        }\n      })\n      setUploadingPointsState(false)\n      console.log('response', response)\n      console.log('server and local state match', savedState)\n    } catch (error) {\n      handleError(error)\n    }\n  }\n\n  const addNewTrack = async () => {\n    const currentUsers = currentRound.users\n    console.log('add new track to round and trackindex', currentRound.id, trackIndex, 'for users', currentUsers)\n    //try {\n    for (let i = 0; i < currentUsers.length; i++) {\n      addPointToCache(currentRoundId, currentUsers[i].id, trackIndex + 1, 3)\n    }\n  }\n\n  const deleteLastTrack = async () => {\n    console.log('delete last track')\n    deleteLastTrackFromCache(currentRoundId)\n  }\n  const updatePoint = async (points, userId) => {\n    console.log('add point with points and userId', points, 'trackIndex', trackIndex, userId, currentRoundId)\n    addPointToCache(currentRoundId, userId, trackIndex, points)\n  }\n\n  const changeTrack = (index) => {\n    setTrackIndex(index)\n  }\n  const setNewRound = (round) => {\n    console.log('round', round)\n    setCurrentRound(round)\n    setCurrentRoundId(round.id)\n    setTrackIndex(-1)\n  }\n  const allLocationsQuery = useQuery(ALL_LOCATIONS)\n  const allUsersQuery = useQuery(ALL_USERS, {\n    skip: false\n  })\n  const allPointsQuery = useQuery(ALL_POINTS, {\n    skip: !currentRoundId,\n    variables: {\n      roundId: currentRoundId\n    },\n  })\n\n  const allRoundsQuery = useQuery(ALL_ROUNDS, {\n    skip: false\n  })\n  const handleLocationClick = (location) =>\n    () => {\n      console.log('location clicked', location)\n      if (location === currentLocation) {\n        setCurrentLocation(null)\n      } else {\n        setCurrentLocation(location)\n      }\n    }\n  const handleUserClick = (user) =>\n    () => {\n      console.log('user clicked', user)\n      if (currentPlayers.includes(user)) {\n        setCurrentPlayers(currentPlayers.filter(player => player !== user))\n      } else {\n        setCurrentPlayers(currentPlayers.concat(user))\n      }\n    }\n  const startNewRound = async () => {\n    console.log('start new round', currentLocation.name, currentPlayers.map(user => user.username))\n    const response = await addRoundMutation(\n      {\n        variables: {\n          userIds: currentPlayers.map(user => user.id),\n          locationId: currentLocation.id\n        }\n      }\n    )\n    console.log('response', response)\n    setCurrentLocation(null)\n    setCurrentPlayers([])\n    setCurrentRound(response.data.addRound)\n    setCurrentRoundId(response.data.addRound.id)\n  }\n  const finishRound = () => {\n    console.log('finish round')\n    setCurrentRound(null)\n    setCurrentRoundId(null)\n    setCurrentPlayers([])\n    setCurrentLocation(null)\n    setPage('main')\n  }\n\n  return (\n    <Container>\n      {token &&\n        <div className=\"ui secondary menu\">\n          <div className=\"item\" onClick={() => { setPage('main'); console.log('main') }}>main</div>\n          {currentRoundId ?\n            <div className=\"item\" onClick={() => { setPage('round'); console.log('continue round') }}>continue round</div>\n            : <div className=\"item\" onClick={() => { setPage('round'); console.log('new round') }}>new round</div>\n          }\n          <div className=\"item\">{username} logged in</div>\n          <div className=\"item\" onClick={() => { setPage(null); doLogout() }}>logout</div>\n\n        </div>\n      }\n      {errorMessage && <div>errorMessage</div>}\n      {\n        !token &&\n        <LoginForm\n          doLogin={doLogin}\n          show={true}\n          handleError={handleError} />\n      }\n      {token && !currentRoundId && <AddRound\n        allLocationsQuery={allLocationsQuery}\n        allUsersQuery={allUsersQuery}\n        handleLocationClick={handleLocationClick}\n        handleUserClick={handleUserClick}\n        currentLocation={currentLocation}\n        currentPlayers={currentPlayers}\n        startNewRound={startNewRound}\n        show={page === 'round'}\n      />}\n      {token && <Rounds\n        result={allRoundsQuery}\n        setRound={setNewRound}\n        show={page === 'main'}\n      />}\n      {token && currentRoundId && <Round\n        allPointsQuery={allPointsQuery}\n        round={currentRound}\n        addNewTrack={addNewTrack}\n        updatePoint={updatePoint}\n        deleteLastTrack={deleteLastTrack}\n        changeTrack={changeTrack}\n        trackIndex={trackIndex}\n        finishRound={finishRound}\n        uploadPoints={uploadPointsFromCacheToServer}\n        show={page === 'round'}\n        savedState={savedState}\n        uploadingPoints={uploadingPointsState}\n      />}\n      <div>\n        <br />\n        <em>Frisbeegolf app, Juho Taipale 2019</em>\n      </div>\n    </Container>\n  )\n\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { ApolloProvider } from 'react-apollo'\nimport { ApolloProvider as ApolloHooksProvider } from 'react-apollo-hooks'\n\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { setContext } from 'apollo-link-context'\n\nimport { split } from 'apollo-link'\nimport { WebSocketLink } from 'apollo-link-ws'\nimport { getMainDefinition } from 'apollo-utilities'\nconst wshost = window.location.origin.replace(/^http/, 'ws')\nlet wsuri = `${wshost}/graphql`\nlet httpUri = '/graphql'\nif (process.env.NODE_ENV !== 'production') {\n  console.log('development or testing environment')\n  httpUri = 'http://localhost:4000/graphql'\n  wsuri = `ws://localhost:4000/graphql`\n  wsuri = `ws://frisbeegolfappi.herokuapp.com/graphql`\n}\nconsole.log('websocket uri', wsuri)\nconsole.log('http uri', httpUri)\n\nconst wsLink = new WebSocketLink({\n  uri: wsuri,\n  options: { reconnect: true }\n})\n\nconst httpLink = createHttpLink({\n  uri: httpUri,\n})\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('token')\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token}` : null,\n    }\n  }\n})\n\nconst link = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query)\n    return kind === 'OperationDefinition' && operation === 'subscription'\n  },\n  wsLink,\n  authLink.concat(httpLink),\n)\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ApolloHooksProvider client={client}>\n      <App />\n    </ApolloHooksProvider>\n  </ApolloProvider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}