{"version":3,"sources":["components/Round.js","components/AddRound.js","components/Rounds.js","components/LoginForm.js","querys.js","App.js","index.js"],"names":["Round","props","show","console","log","round","allPointsQuery","loading","react_default","a","createElement","error","data","allPoints","users","players","trackIndex","order","slice","maxTrackIndex","arr","temp","forEach","element","maxValue","map","play","changeTrack","handleTrackIndexChangeClick","index","handlePointChangeClick","points","user","updatePoint","id","sort","u1","u2","_loop","i","filter","point","u1pointArray","u2pointArray","length","v","u1p","u2p","_ret","addNewTrack","trackNumbers","push","key","className","location","name","text","onClick","player","playerPlays","p1","p2","total","reduce","tot","orderOf","username","deleteLastTrack","finishRound","AddRound","allLocationsQuery","allUsersQuery","allLocations","allUsers","currentLocation","currentUsers","handleLocationClick","handleUserClick","onSubmit","event","preventDefault","startNewRound","type","Rounds","result","handleRoundClick","setRound","rounds","allRounds","r1","r2","date","colSpan","d","Date","dateString","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","LoginForm","_useState","useState","_useState2","Object","slicedToArray","setUsername","_useState3","_useState4","password","setPassword","login","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","doLogin","stop","_x","apply","this","arguments","placeholder","value","onChange","target","LOGIN","gql","_templateObject","ALL_LOCATIONS","_templateObject2","_templateObject3","ALL_ROUNDS","_templateObject4","ALL_POINTS","_templateObject5","ALL_USERS","_templateObject6","ADD_ROUND","_templateObject7","_templateObject8","_templateObject9","ADD_POINT","_templateObject10","_templateObject11","ADD_NEW_TRACK","_templateObject12","DELETE_LAST_TRACK","_templateObject13","App","currentRoundId","setCurrentRoundId","currentRound","setCurrentRound","_useState5","_useState6","setCurrentPlayers","_useState7","_useState8","setCurrentLocation","_useState9","_useState10","errorMessage","setErrorMessage","_useState11","_useState12","setTrackIndex","_useState13","_useState14","token","setToken","_useState15","_useState16","_useState17","_useState18","page","setPage","client","useApolloClient","useEffect","localStorage","getItem","response","tusername","loginMutation","variables","sent","setItem","resetStore","_x2","handleError","graphQLErrors","message","setTimeout","networkError","errorArray","errors","addPointMutation","useMutation","onError","update","store","dataInStore","readQuery","query","roundId","addedPoint","addPoint","concat","writeQuery","deleteLastTrackMutation","deletedTrackIndex","dataInStoreAfter","addNewTrackMutation","newTrackPoints","addRoundMutation","addedRound","addRound","_ref2","_callee2","_context2","_ref3","_callee3","_context3","t0","_ref4","_callee4","userId","_context4","_x3","_x4","useQuery","skip","allRoundsQuery","_ref5","_callee5","_context5","userIds","locationId","Container","clear","components_LoginForm","components_AddRound","includes","components_Rounds","components_Round","wshost","window","origin","replace","wsuri","wsLink","WebSocketLink","uri","options","reconnect","httpLink","createHttpLink","authLink","setContext","_","headers","objectSpread","authorization","link","split","_getMainDefinition","getMainDefinition","kind","operation","ApolloClient","cache","InMemoryCache","ReactDOM","render","react_apollo_esm","ApolloContext","src_App","document","getElementById"],"mappings":"iNA8JeA,EAlJD,SAACC,GACb,IAAKA,EAAMC,KACT,OAAO,KAGT,GADAC,QAAQC,IAAI,QAASH,EAAMI,QACtBJ,EAAMI,MAET,OADAF,QAAQC,IAAI,mBACL,KAET,GAAIH,EAAMK,eAAeC,QAEvB,OADAJ,QAAQC,IAAI,WACLI,EAAAC,EAAAC,cAAA,yBAET,GAAIT,EAAMK,eAAeK,MAEvB,OADAR,QAAQC,IAAI,QAASH,EAAMK,eAAeK,OACnCH,EAAAC,EAAAC,cAAA,uBAETP,QAAQC,IAAI,aAAcH,EAAMK,eAAeM,KAAKC,WACpDV,QAAQC,IAAI,WAAYH,EAAMI,MAAMS,OACpC,IAAMC,EAAUd,EAAMI,MAAMS,MACtBE,EAAaf,EAAMe,WACnBH,EAAYZ,EAAMK,eAAeM,KAAKC,UACtCR,EAAQJ,EAAMI,MAChBY,EAAQF,EAAQG,QACdC,EAlCS,SAACC,GAChB,IAAIC,GAAQ,EAMZ,OALAD,EAAIE,QAAQ,SAAAC,GACNF,EAAOE,IACTF,EAAOE,KAGJF,EA2BeG,CAASX,EAAUY,IAAI,SAAAC,GAAI,OAAIA,EAAKV,cAC1D,IAAoB,IAAhBA,EAEF,OADAf,EAAM0B,YAAYR,GACX,KAET,IAMMS,EAA8B,SAACC,GAAD,OAClC,WACE5B,EAAM0B,YAAYE,KAEhBC,EAAyB,SAACC,EAAQC,GAAT,OAC7B,WACMD,GAAU,GACZ9B,EAAMgC,YAAYF,EAAQC,EAAKE,MAGrCjB,EAAMkB,KAAK,SAACC,EAAIC,GACd,IADqB,IAAAC,EAAA,SACZC,GACP,IAAMlB,EAAOR,EAAU2B,OAAO,SAAAC,GAAK,OAAIA,EAAMzB,aAAeuB,IACtDG,EAAerB,EAAKmB,OAAO,SAAAC,GAAK,OAAIA,EAAMT,KAAKE,KAAOE,EAAGF,KACzDS,EAAetB,EAAKmB,OAAO,SAAAC,GAAK,OAAIA,EAAMT,KAAKE,KAAOG,EAAGH,KAC/D,GAA4B,IAAxBQ,EAAaE,QAAwC,IAAxBD,EAAaC,OAC5C,OAAAC,EAAO,GAET,IAAMC,EAAMJ,EAAa,GAAGX,OACtBgB,EAAMJ,EAAa,GAAGZ,OAC5B,OAAIe,EAAMC,EACR,CAAAF,EAAO,GACEC,EAAMC,EACf,CAAAF,GAAQ,QADH,GAXAN,EAAIvB,EAAYuB,GAAK,EAAGA,IAAK,KAAAS,EAAAV,EAA7BC,GAA6B,qBAAAS,EAAA,OAAAA,EAAAH,EAetC,OAAO,IAET1C,QAAQC,IAAI,QAASa,GAUjBE,EAAgB,IAAMH,GACxBf,EAAMgD,cAGR,IADA,IAAMC,EAAe,GACZX,EAAI,EAAGA,EAAIpB,EAAgB,EAAGoB,IACrCW,EAAaC,KAAK3C,EAAAC,EAAAC,cAAA,MAAI0C,IAAKb,GAAIA,EAAI,IAErC,OACE/B,EAAAC,EAAAC,cAAA,OAAK2C,UAAU,OACb7C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKL,EAAMiD,SAASC,MACpB/C,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAQ8C,KAAK,IAAIC,QAAS7B,EAA4BZ,EAAa,IAAnE,KADF,SAESA,EAAa,EACpBR,EAAAC,EAAAC,cAAA,UAAQ8C,KAAK,IAAIC,QAAS7B,EAA4BZ,EAAa,IAAnE,MAEFR,EAAAC,EAAAC,cAAA,SAAO2C,UAAU,mBACf7C,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,mBAAcF,EAAAC,EAAAC,cAAA,oBAEZwC,EAEF1C,EAAAC,EAAAC,cAAA,qBAGJF,EAAAC,EAAAC,cAAA,aAEGK,EAAQU,IAAI,SAAAiC,GACX,IAAMC,EAAc9C,EAAU2B,OAAO,SAAAC,GAAK,OAAIA,EAAMT,KAAKE,KAAOwB,EAAOxB,KACvE,GAAIyB,EAAa,CACfA,EAAYxB,KAAK,SAACyB,EAAIC,GAAL,OAAYD,EAAG5C,WAAa6C,EAAG7C,aAChD,IAAM8C,EAA+B,IAAvBH,EAAYf,OACxB,EAAIe,EAAYlC,IAAI,SAAAC,GAAI,OAAIA,EAAKK,SAAQgC,OAAO,SAACC,EAAKvB,GAAN,OAAgBuB,EAAMvB,IACxE,OACEjC,EAAAC,EAAAC,cAAA,MAAK0C,IAAKM,EAAOxB,IACf1B,EAAAC,EAAAC,cAAA,MAAI0C,IAAI,SA7CV,SAACM,GACf,IAAK,IAAInB,EAAI,EAAGA,EAAItB,EAAM2B,OAAQL,IAChC,GAAImB,IAAWzC,EAAMsB,GACnB,OAAOA,EAAI,EAAI,IAGnB,MAAO,MAuC0B0B,CAAQP,IACzBlD,EAAAC,EAAAC,cAAA,MAAI0C,IAAKM,EAAOQ,UAAWR,EAAOQ,UAEhCP,EAAYlC,IAAI,SAAAC,GACd,OAAIA,EAAKV,aAAeA,EACdR,EAAAC,EAAAC,cAAA,MAAI0C,IAAK1B,EAAKV,WAAa0C,EAAOxB,IAAI1B,EAAAC,EAAAC,cAAA,SAC5CF,EAAAC,EAAAC,cAAA,UAAQ2C,UAAU,YAAYI,QAAS3B,EAAuBJ,EAAKK,OAAS,EAAGL,EAAKM,OAApF,KACCN,EAAKK,OACNvB,EAAAC,EAAAC,cAAA,UAAQ2C,UAAU,YAAYI,QAAS3B,EAAuBJ,EAAKK,OAAS,EAAGL,EAAKM,OAApF,OAIMxB,EAAAC,EAAAC,cAAA,MAAI0C,IAAK1B,EAAKV,WAAa0C,EAAOxB,IAAKR,EAAKK,UAI1DvB,EAAAC,EAAAC,cAAA,UAAKoD,IAGJ,OACLtD,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,4BAMdF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQ2C,UAAU,YAAYG,KAAK,oBAAoBC,QA3G1B,WACjCxD,EAAMkE,oBA0GF,sBAEF3D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQ2C,UAAU,YAAYG,KAAK,eAAeC,QA3GzB,WAC7BxD,EAAMmE,gBA0GF,mBAED,ICnDQC,EApGE,SAACpE,GAChB,IAAKA,EAAMC,KACT,OAAO,KAWT,GAAID,EAAMqE,kBAAkB/D,SAAWN,EAAMsE,cAAchE,QAEzD,OADAJ,QAAQC,IAAI,WACLI,EAAAC,EAAAC,cAAA,yBAET,GAAIT,EAAMqE,kBAAkB3D,OAASV,EAAMsE,cAAc5D,MAEvD,OADAR,QAAQC,IAAI,SAAUH,EAAMsE,cAAc5D,MAAOV,EAAMqE,kBAAkB3D,OAClEH,EAAAC,EAAAC,cAAA,uBAET,IAAM8D,EAAevE,EAAMqE,kBAAkB1D,KAAK4D,aAC5CC,EAAWxE,EAAMsE,cAAc3D,KAAK6D,SACpCC,EAAkBzE,EAAMyE,gBACxBC,EAAe1E,EAAM0E,aAC3B,OAAKD,EAyBHlE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,OAAK+C,QAASxD,EAAM2E,oBAAoBF,IACrCA,EAAgBnB,MAEnB/C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAO2C,UAAU,mBACf7C,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,MAAI0C,IAAI,UACN5C,EAAAC,EAAAC,cAAA,gCAGJF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACGiE,EAAalD,IAAI,SAAAO,GAAI,OACpBxB,EAAAC,EAAAC,cAAA,MAAI0C,IAAKpB,EAAKE,GAAIuB,QAASxD,EAAM4E,gBAAgB7C,IAAQA,EAAKkC,gBAOtES,EAAa/B,OAAS,GAAK8B,GAC3BlE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMoE,SAtEQ,SAACC,GACrB5E,QAAQC,IAAI,uBAAwBsE,EAAiBC,GACrDI,EAAMC,iBACN/E,EAAMgF,kBAoEEzE,EAAAC,EAAAC,cAAA,UAAQ2C,UAAU,YAAY6B,KAAK,UAAnC,WAIN1E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAO2C,UAAU,mBACf7C,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,2BAGJF,EAAAC,EAAAC,cAAA,aACG+D,EAAShD,IAAI,SAAAO,GAAI,OAChBxB,EAAAC,EAAAC,cAAA,MAAI0C,IAAKpB,EAAKE,IACZ1B,EAAAC,EAAAC,cAAA,MAAI+C,QAASxD,EAAM4E,gBAAgB7C,IAAQA,EAAKkC,iBA7D1D1D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAO2C,UAAU,mBACf7C,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,MAAI0C,IAAI,UACN5C,EAAAC,EAAAC,cAAA,yBAGJF,EAAAC,EAAAC,cAAA,aACG8D,EAAa/C,IAAI,SAAA6B,GAAQ,OACxB9C,EAAAC,EAAAC,cAAA,MAAI0C,IAAKE,EAASpB,IAChB1B,EAAAC,EAAAC,cAAA,MAAI+C,QAASxD,EAAM2E,oBAAoBtB,IAAYA,EAASC,cCU/D4B,EAlDA,SAAClF,GACd,IAAKA,EAAMC,KACT,OAAO,KAET,GAAID,EAAMmF,OAAO7E,QACf,OAAOC,EAAAC,EAAAC,cAAA,yBAET,GAAIT,EAAMmF,OAAOzE,MAEf,OADAR,QAAQC,IAAI,QAASH,EAAMmF,OAAOzE,OAC3BH,EAAAC,EAAAC,cAAA,uBAET,IAAM2E,EAAmB,SAAChF,GAAD,OACvB,WACEF,QAAQC,IAAI,gBAAiBC,GAC7BJ,EAAMqF,SAASjF,KAEbkF,EAAStF,EAAMmF,OAAOxE,KAAK4E,UAGjC,OAFAD,EAAOpD,KAAK,SAACsD,EAAIC,GAAL,OAAYA,EAAGC,KAAOF,EAAGE,OACrCxF,QAAQC,IAAI,aAAcmF,GACrBA,EAIH/E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAO2C,UAAU,mBACf7C,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,MAAI0C,IAAI,UACN5C,EAAAC,EAAAC,cAAA,sBAAiBF,EAAAC,EAAAC,cAAA,kBAAaF,EAAAC,EAAAC,cAAA,MAAIkF,QAAQ,MAAZ,aAGlCpF,EAAAC,EAAAC,cAAA,aACG6E,EAAO9D,IAAI,SAAApB,GACV,IAAMwF,EAAI,IAAIC,KAAKzF,EAAMsF,MACnBI,EAAaF,EAAEG,UAAY,KAAOH,EAAEI,WAAa,GAAK,IAAMJ,EAAEK,cAAgB,IAAML,EAAEM,WAAa,IAAMN,EAAEO,aAAe,IAAMP,EAAEQ,aACxI,OACE7F,EAAAC,EAAAC,cAAA,MAAI+C,QAAS4B,EAAiBhF,GAAQ+C,IAAK/C,EAAM6B,IAC/C1B,EAAAC,EAAAC,cAAA,UAAKL,EAAMiD,SAASC,MAAU/C,EAAAC,EAAAC,cAAA,UAAKqF,GAClC1F,EAAMS,MAAMW,IAAI,SAAAO,GAAI,OACnBxB,EAAAC,EAAAC,cAAA,MAAI0C,IAAKpB,EAAKkC,UAAWlC,EAAKkC,kBAlBrC,MCwBIoC,EA5CG,SAACrG,GAAU,IAAAsG,EACKC,mBAAS,IADdC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACpBrC,EADoBuC,EAAA,GACVG,EADUH,EAAA,GAAAI,EAEKL,mBAAS,IAFdM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAEpBE,EAFoBD,EAAA,GAEVE,EAFUF,EAAA,GAG3B,IAAK7G,EAAMC,KACT,OAAO,KAET,IAAM+G,EAAK,eAAAC,EAAAR,OAAAS,EAAA,EAAAT,CAAAU,EAAA3G,EAAA4G,KAAG,SAAAC,EAAOvC,GAAP,OAAAqC,EAAA3G,EAAA8G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACZ3C,EAAMC,iBACN/E,EAAM0H,QAAQzD,EAAU6C,GAFZ,wBAAAS,EAAAI,SAAAN,MAAH,gBAAAO,GAAA,OAAAX,EAAAY,MAAAC,KAAAC,YAAA,GAUX,OACExH,EAAAC,EAAAC,cAAA,OAAK2C,UAAU,SACb7C,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,QAAMoE,SAAUmC,EAAO5D,UAAU,WAC/B7C,EAAAC,EAAAC,cAAA,OAAK2C,UAAU,SACb7C,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOwB,GAAG,WACRgD,KAAK,OACL+C,YAAY,WACZC,MAAOhE,EACPiE,SAbe,SAACpD,GACxB6B,EAAY7B,EAAMqD,OAAOF,WAcrB1H,EAAAC,EAAAC,cAAA,OAAK2C,UAAU,SACb7C,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOwB,GAAG,WACRgD,KAAK,WACL+C,YAAY,WACZC,MAAOnB,EACPoB,SAxBe,SAACpD,GACxBiC,EAAYjC,EAAMqD,OAAOF,WAyBrB1H,EAAAC,EAAAC,cAAA,UAAQ2C,UAAU,YAAY6B,KAAK,UAAnC,mpFCrCD,IAAMmD,EAAQC,IAAHC,KAkBLC,GATcF,IAAHG,KASKH,IAAHI,MAQbC,EAAaL,IAAHM,KAUVC,EAAaP,IAAHQ,KAaVC,EAAYT,IAAHU,KAyBTC,GAjBKX,IAAHY,KAQaZ,IAAHa,KASAb,IAAHc,MA6BTC,GAVWf,IAAHgB,KAUIhB,IAAHiB,MAiBTC,EAAgBlB,IAAHmB,KAcbC,EAAoBpB,IAAHqB,KC0PfC,MAzWf,WAAe,IAAArD,EAC+BC,mBAAS,MADxCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNsD,EADMpD,EAAA,GACUqD,EADVrD,EAAA,GAAAI,EAE2BL,mBAAS,MAFpCM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAENkD,EAFMjD,EAAA,GAEQkD,EAFRlD,EAAA,GAAAmD,EAI6BzD,mBAAS,IAJtC0D,EAAAxD,OAAAC,EAAA,EAAAD,CAAAuD,EAAA,GAINtF,EAJMuF,EAAA,GAIQC,EAJRD,EAAA,GAAAE,EAKiC5D,mBAAS,MAL1C6D,EAAA3D,OAAAC,EAAA,EAAAD,CAAA0D,EAAA,GAKN1F,EALM2F,EAAA,GAKWC,EALXD,EAAA,GAAAE,EAM2B/D,mBAAS,MANpCgE,EAAA9D,OAAAC,EAAA,EAAAD,CAAA6D,EAAA,GAMNE,EANMD,EAAA,GAMQE,EANRF,EAAA,GAAAG,EAOuBnE,mBAAS,GAPhCoE,EAAAlE,OAAAC,EAAA,EAAAD,CAAAiE,EAAA,GAON3J,EAPM4J,EAAA,GAOMC,EAPND,EAAA,GAAAE,EAQatE,mBAAS,MARtBuE,EAAArE,OAAAC,EAAA,EAAAD,CAAAoE,EAAA,GAQNE,EARMD,EAAA,GAQCE,EARDF,EAAA,GAAAG,EASmB1E,mBAAS,MAT5B2E,EAAAzE,OAAAC,EAAA,EAAAD,CAAAwE,EAAA,GASNhH,EATMiH,EAAA,GASIvE,EATJuE,EAAA,GAAAC,GAUW5E,mBAAS,QAVpB6E,GAAA3E,OAAAC,EAAA,EAAAD,CAAA0E,GAAA,GAUNE,GAVMD,GAAA,GAUAE,GAVAF,GAAA,GAWPG,GAASC,cAEfC,oBAAU,WAER,IAAMxH,EAAWyH,aAAaC,QAAQ,YAChCZ,EAAQW,aAAaC,QAAQ,SACnCzL,QAAQC,IAAI,sBAAuB8D,EAAU8G,GAC7CC,EAASD,GACTpE,EAAY1C,IACX,IAEH,IAAMyD,GAAO,eAAAT,EAAAR,OAAAS,EAAA,EAAAT,CAAAU,EAAA3G,EAAA4G,KAAG,SAAAC,EAAOpD,EAAU6C,GAAjB,IAAA8E,EAAAb,EAAAc,EAAA,OAAA1E,EAAA3G,EAAA8G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACSqE,GAAc,CACnCC,UAAW,CACT9H,WACA6C,cAJU,OACR8E,EADQrE,EAAAyE,KAORjB,EAAQa,EAASjL,KAAKqG,MAAM+D,MAC5Bc,EAAYD,EAASjL,KAAKqG,MAAM/C,SACtC/D,QAAQC,IAAI,2BAA4B4K,EAAOc,GAC3Cd,IAEFC,EAASD,GACTpE,EAAY1C,GACZyH,aAAaO,QAAQ,WAAYJ,GACjCH,aAAaO,QAAQ,QAASlB,GAC9BO,GAAQ,QACRC,GAAOW,cAjBK,wBAAA3E,EAAAI,SAAAN,MAAH,gBAAAO,EAAAuE,GAAA,OAAAlF,EAAAY,MAAAC,KAAAC,YAAA,GA6BPqE,GAAc,SAAC1L,GAEnB,GADAR,QAAQC,IAAI,QAASO,GACjBA,EAAM2L,cAAc1J,OAAS,EAC/B8H,EAAgB/J,EAAM2L,cAAc,GAAGC,SACvCC,WAAW,WACT9B,EAAgB,OACf,UAEA,GAAI/J,EAAM8L,aAAc,CAC3B,IAAMC,EAAa/L,EAAM8L,aAAarH,OAAOuH,OACzCD,GAAcA,EAAW9J,OAAS,IACpC8H,EAAgBgC,EAAW,GAAGH,SAC9BC,WAAW,WACT9B,EAAgB,OACf,QASHkC,GAAmBC,YAAYxD,EAAW,CAC9CyD,QAAST,GACTU,OAAQ,SAACC,EAAOnB,GACd1L,QAAQC,IAAI,qBAAsByL,GAClC,IAAIoB,EAAcD,EAAME,UAAU,CAChCC,MAAOtE,EACPmD,UAAW,CACToB,QAASvD,KAGb1J,QAAQC,IAAI,oCAAqC6M,EAAYpM,WAC7D,IAAMwM,EAAaxB,EAASjL,KAAK0M,SACjCnN,QAAQC,IAAI,cAAeiN,GAC3B,IAAMhM,EAAO4L,EAAYpM,UAAU2B,OAAO,SAAAC,GAAK,OAAIA,EAAMP,KAAOmL,EAAWnL,KAAIqL,OAAOF,GACtFlN,QAAQC,IAAI,cAAeiB,GAC3BmK,GAAOgC,WAAW,CAChBL,MAAOtE,EACPmD,UAAW,CACToB,QAASvD,GAEXjJ,KAAM,CAAEC,UAAWQ,QAInBoM,GAA0BZ,YAAYnD,EAAmB,CAC7DoD,QAAST,GACTU,OAAQ,SAACC,EAAOnB,GACd,IAAM6B,EAAoB7B,EAASjL,KAAKuD,gBAGxC,GAFAhE,QAAQC,IAAI,sBAAuBsN,GAE/BA,GAAqB,EAAG,CAC1B,IAAMT,EAAcD,EAAME,UAAU,CAClCC,MAAOtE,EACPmD,UAAW,CACToB,QAASvD,KAGb1J,QAAQC,IAAI,yBAA0B6M,EAAYpM,WAClD,IAAMQ,EAAO4L,EAAYpM,UAAU2B,OAAO,SAAAC,GAAK,OAAIA,EAAMzB,aAAe0M,IACxEvN,QAAQC,IAAI,WAAYiB,GACxBmK,GAAOgC,WAAW,CAChBL,MAAOtE,EACPmD,UAAW,CACToB,QAASvD,GAEXjJ,KAAM,CAAEC,UAAWQ,KAEjBL,EAAa0M,EAAoB,GACnC7C,EAAc6C,EAAoB,GAEpC,IAAMC,EAAmBX,EAAME,UAAU,CACvCC,MAAOtE,EACPmD,UAAW,CACToB,QAASvD,KAGb1J,QAAQC,IAAI,+BAAgCuN,EAAiB9M,UAAW,kBAAmBG,OAK3F4M,GAAsBf,YAAYrD,EAAe,CACrDsD,QAAST,GACTU,OAAQ,SAACC,EAAOnB,GACd,IAAIoB,EAAcD,EAAME,UAAU,CAChCC,MAAOtE,EACPmD,UAAW,CACToB,QAASvD,KAGb1J,QAAQC,IAAI,sCAAuC6M,EAAYpM,WAC/DV,QAAQC,IAAI,qBAAsByL,EAASjL,MAC3C,IAAMiN,EAAiBhC,EAASjL,KAAKqC,YAErC,GADA9C,QAAQC,IAAI,gBAAiByN,GACzBA,GAAkBA,EAAejL,OAAS,EAAG,CAE/C,IADA,IAAIvB,EAAO4L,EAAYpM,UACd0B,EAAI,EAAGA,EAAIsL,EAAejL,OAAQL,IACzClB,EAAK8B,KAAK0K,EAAetL,IAE3BpC,QAAQC,IAAI,aAAciB,GAC1BmK,GAAOgC,WAAW,CAChBL,MAAOtE,EACPmD,UAAW,CACToB,QAASvD,GAEXjJ,KAAM,CAAEC,UAAWQ,KAErBlB,QAAQC,IAAI,kBAAmByN,EAAe,GAAG7M,YACjD6J,EAAcgD,EAAe,GAAG7M,YAChCiM,EAAcD,EAAME,UAAU,CAC5BC,MAAOtE,EACPmD,UAAW,CACToB,QAASvD,KAGb1J,QAAQC,IAAI,qCAAsC6M,OAIlDa,GAAmBjB,YAAY5D,EAAW,CAC9C6D,QAAST,GACTU,OAAQ,SAACC,EAAOnB,GACd1L,QAAQC,IAAI,qBAAsByL,GAClC,IAAIoB,EAAcD,EAAME,UAAU,CAChCC,MAAOxE,IAETxI,QAAQC,IAAI,oCAAqC6M,EAAYzH,WAC7D,IAAMuI,EAAalC,EAASjL,KAAKoN,SACjC7N,QAAQC,IAAI,cAAe2N,GAC3B,IAAM1M,EAAO4L,EAAYzH,UAAUhD,OAAO,SAAAnC,GAAK,OAAIA,EAAM6B,KAAO6L,EAAW7L,KAAIqL,OAAOQ,GACtF5N,QAAQC,IAAI,cAAeiB,GAC3BmK,GAAOgC,WAAW,CAChBL,MAAOxE,EACP/H,KAAM,CAAE4E,UAAWnE,QAInB0K,GAAgBc,YAAYxE,EAAO,CACvCyE,QAAST,KAELpJ,GAAW,eAAAgL,EAAAvH,OAAAS,EAAA,EAAAT,CAAAU,EAAA3G,EAAA4G,KAAG,SAAA6G,IAAA,OAAA9G,EAAA3G,EAAA8G,KAAA,SAAA4G,GAAA,cAAAA,EAAA1G,KAAA0G,EAAAzG,MAAA,cAAAyG,EAAAzG,KAAA,EAGGkG,GAAoB,CACvC5B,UAAW,CACToB,QAASvD,KALK,OAAAsE,EAAAlC,KAQMrL,KARN,wBAAAuN,EAAAvG,SAAAsG,MAAH,yBAAAD,EAAAnG,MAAAC,KAAAC,YAAA,GAeX7D,GAAe,eAAAiK,EAAA1H,OAAAS,EAAA,EAAAT,CAAAU,EAAA3G,EAAA4G,KAAG,SAAAgH,IAAA,IAAAxC,EAAA,OAAAzE,EAAA3G,EAAA8G,KAAA,SAAA+G,GAAA,cAAAA,EAAA7G,KAAA6G,EAAA5G,MAAA,cACtBvH,QAAQC,IAAI,qBADUkO,EAAA7G,KAAA,EAAA6G,EAAA5G,KAAA,EAGG+F,GAAwB,CAC7CzB,UAAW,CACToB,QAASvD,KALO,OAGdgC,EAHcyC,EAAArC,KAQpB9L,QAAQC,IAAI,WAAYyL,EAASjL,MARb0N,EAAA5G,KAAA,gBAAA4G,EAAA7G,KAAA,EAAA6G,EAAAC,GAAAD,EAAA,SAUpBjC,GAAWiC,EAAAC,IAVS,yBAAAD,EAAA1G,SAAAyG,EAAA,iBAAH,yBAAAD,EAAAtG,MAAAC,KAAAC,YAAA,GAaf/F,GAAW,eAAAuM,EAAA9H,OAAAS,EAAA,EAAAT,CAAAU,EAAA3G,EAAA4G,KAAG,SAAAoH,EAAO1M,EAAQ2M,GAAf,OAAAtH,EAAA3G,EAAA8G,KAAA,SAAAoH,GAAA,cAAAA,EAAAlH,KAAAkH,EAAAjH,MAAA,cAAAiH,EAAAlH,KAAA,EAAAkH,EAAAjH,KAAA,EAGOkF,GAAiB,CACtCZ,UAAW,CACTjK,OAAQA,EACRf,WAAYA,EACZ0N,OAAQA,EACRtB,QAASvD,KARG,OAAA8E,EAAA1C,KAAA0C,EAAAjH,KAAA,eAAAiH,EAAAlH,KAAA,EAAAkH,EAAAJ,GAAAI,EAAA,SAahBtC,GAAWsC,EAAAJ,IAbK,wBAAAI,EAAA/G,SAAA6G,EAAA,iBAAH,gBAAAG,EAAAC,GAAA,OAAAL,EAAA1G,MAAAC,KAAAC,YAAA,GA0BX1D,GAAoBwK,YAAStG,GAC7BjE,GAAgBuK,YAAS/F,EAAW,CACxCgG,MAAM,IAEFzO,GAAiBwO,YAASjG,EAAY,CAC1CkG,MAAOlF,EACPmC,UAAW,CACToB,QAASvD,KAIPmF,GAAiBF,YAASnG,EAAY,CAC1CoG,MAAM,IAoBF9J,GAAa,eAAAgK,EAAAvI,OAAAS,EAAA,EAAAT,CAAAU,EAAA3G,EAAA4G,KAAG,SAAA6H,IAAA,IAAArD,EAAA,OAAAzE,EAAA3G,EAAA8G,KAAA,SAAA4H,GAAA,cAAAA,EAAA1H,KAAA0H,EAAAzH,MAAA,cACpBvH,QAAQC,IAAI,kBAAmBsE,EAAgBnB,KAAMoB,EAAalD,IAAI,SAAAO,GAAI,OAAIA,EAAKkC,YAD/DiL,EAAAzH,KAAA,EAEGoG,GACrB,CACE9B,UAAW,CACToD,QAASzK,EAAalD,IAAI,SAAAO,GAAI,OAAIA,EAAKE,KACvCmN,WAAY3K,EAAgBxC,MANd,OAEd2J,EAFcsD,EAAAlD,KAUpB9L,QAAQC,IAAI,WAAYyL,GACxBvB,EAAmB,MACnBH,EAAkB,IAClBH,EAAgB6B,EAASjL,KAAKoN,UAC9BlE,EAAkB+B,EAASjL,KAAKoN,SAAS9L,IAdrB,wBAAAiN,EAAAvH,SAAAsH,MAAH,yBAAAD,EAAAnH,MAAAC,KAAAC,YAAA,GAwBnB,OACExH,EAAAC,EAAAC,cAAC4O,EAAA,EAAD,KACGtE,GACCxK,EAAAC,EAAAC,cAAA,OAAK2C,UAAU,qBACb7C,EAAAC,EAAAC,cAAA,OAAK2C,UAAU,OAAOI,QAAS,WAAQ8H,GAAQ,QAASpL,QAAQC,IAAI,UAApE,QACCyJ,EACCrJ,EAAAC,EAAAC,cAAA,OAAK2C,UAAU,OAAOI,QAAS,WAAQ8H,GAAQ,SAAUpL,QAAQC,IAAI,oBAArE,kBACEI,EAAAC,EAAAC,cAAA,OAAK2C,UAAU,OAAOI,QAAS,WAAQ8H,GAAQ,SAAUpL,QAAQC,IAAI,eAArE,aAEJI,EAAAC,EAAAC,cAAA,OAAK2C,UAAU,QAAQa,EAAvB,cACA1D,EAAAC,EAAAC,cAAA,OAAK2C,UAAU,OAAOI,QAAS,WAAQ8H,GAAQ,MA9QrDpL,QAAQC,IAAI,UACZ6K,EAAS,MACTrE,EAAY,MACZ+E,aAAa4D,QACb/D,GAAOW,eA0QD,WAIH1B,GAAgBjK,EAAAC,EAAAC,cAAA,4BAEdsK,GACDxK,EAAAC,EAAAC,cAAC8O,EAAD,CACE7H,QAASA,GACTzH,MAAM,EACNmM,YAAaA,KAEhBrB,IAAUnB,GAAkBrJ,EAAAC,EAAAC,cAAC+O,EAAD,CAC3BnL,kBAAmBA,GACnBC,cAAeA,GACfK,oBAnEsB,SAACtB,GAAD,OAC1B,WACEnD,QAAQC,IAAI,mBAAoBkD,GAE9BgH,EADEhH,IAAaoB,EACI,KAEApB,KA8DnBuB,gBA3DkB,SAAC7C,GAAD,OACtB,WACE7B,QAAQC,IAAI,eAAgB4B,GACxB2C,EAAa+K,SAAS1N,GACxBmI,EAAkBxF,EAAanC,OAAO,SAAAkB,GAAM,OAAIA,IAAW1B,KAE3DmI,EAAkBxF,EAAa4I,OAAOvL,MAsDtC0C,gBAAiBA,EACjBC,aAAcA,EACdM,cAAeA,GACf/E,KAAe,UAAToL,KAEPN,GAASxK,EAAAC,EAAAC,cAACiP,EAAD,CACRvK,OAAQ4J,GACR1J,SAhGc,SAACjF,GACnBF,QAAQC,IAAI,QAASC,GACrB2J,EAAgB3J,GAChByJ,EAAkBzJ,EAAM6B,IACxB2I,GAAe,IA6FX3K,KAAe,SAAToL,KAEPN,GAASnB,GAAkBrJ,EAAAC,EAAAC,cAACkP,EAAD,CAC1BtP,eAAgBA,GAChBD,MAAO0J,EACP9G,YAAaA,GACbhB,YAAaA,GACbkC,gBAAiBA,GACjBxC,YA5Gc,SAACE,GACnBgJ,EAAchJ,IA4GVb,WAAYA,EACZoD,YArDc,WAClBjE,QAAQC,IAAI,gBACZ4J,EAAgB,MAChBF,EAAkB,MAClBK,EAAkB,IAClBG,EAAmB,MACnBiB,GAAQ,SAgDJrL,KAAe,UAAToL,KAER9K,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,iHC3WFmP,GAASC,OAAOxM,SAASyM,OAAOC,QAAQ,QAAS,MACjDC,GAAK,GAAA1C,OAAMsC,GAAN,YACX1P,QAAQC,IAAI,gBAAiB6P,IAC7B,IAAMC,GAAS,IAAIC,IAAc,CAE/BC,IAAKH,GACLI,QAAS,CAAEC,WAAW,KAGlBC,GAAWC,YAAe,CAE9BJ,IAAK,aAGDK,GAAWC,YAAW,SAACC,EAADzJ,GAAoB,IAAd0J,EAAc1J,EAAd0J,QAC1B5F,EAAQW,aAAaC,QAAQ,eACnC,MAAO,CACLgF,QAAQlK,OAAAmK,EAAA,EAAAnK,CAAA,GACHkK,EADE,CAELE,cAAe9F,EAAK,UAAAuC,OAAavC,GAAU,UAK3C+F,GAAOC,YACX,SAAA/C,GAAe,IAAZd,EAAYc,EAAZd,MAAY8D,EACeC,YAAkB/D,GAAtCgE,EADKF,EACLE,KAAMC,EADDH,EACCG,UACd,MAAgB,wBAATD,GAAgD,iBAAdC,GAE3ClB,GACAO,GAASlD,OAAOgD,KAGZ/E,GAAS,IAAI6F,IAAa,CAC9BN,QACAO,MAAO,IAAIC,MAGbC,IAASC,OACPjR,EAAAC,EAAAC,cAACgR,EAAA,EAAD,CAAgBlG,OAAQA,IACtBhL,EAAAC,EAAAC,cAACiR,EAAA,EAAD,CAAqBnG,OAAQA,IAC3BhL,EAAAC,EAAAC,cAACkR,EAAD,QAGJC,SAASC,eAAe","file":"static/js/main.4f1a247b.chunk.js","sourcesContent":["import React from 'react';\n\nconst maxValue = (arr) => {\n  let temp = -1\n  arr.forEach(element => {\n    if (temp < element) {\n      temp = element\n    }\n  });\n  return temp\n}\n\nconst Round = (props) => {\n  if (!props.show) {\n    return null\n  }\n  console.log('round', props.round)\n  if (!props.round) {\n    console.log('no round chosen')\n    return null\n  }\n  if (props.allPointsQuery.loading) {\n    console.log('loading')\n    return <div>loading...</div>\n  }\n  if (props.allPointsQuery.error) {\n    console.log('error', props.allPointsQuery.error)\n    return <div>error...</div>\n  }\n  console.log('all points', props.allPointsQuery.data.allPoints)\n  console.log('players ', props.round.users)\n  const players = props.round.users\n  const trackIndex = props.trackIndex\n  const allPoints = props.allPointsQuery.data.allPoints\n  const round = props.round\n  let order = players.slice()\n  const maxTrackIndex = maxValue(allPoints.map(play => play.trackIndex))\n  if (trackIndex === -1) {\n    props.changeTrack(maxTrackIndex)\n    return null\n  }\n  const handleDeleteLastTrackClick = () => {\n    props.deleteLastTrack()\n  }\n  const handleRoundFinishClick = () => {\n    props.finishRound()\n  }\n  const handleTrackIndexChangeClick = (index) =>\n    () => {\n      props.changeTrack(index)\n    }\n  const handlePointChangeClick = (points, user) =>\n    () => {\n      if (points > -1) {\n        props.updatePoint(points, user.id)\n      }\n    }\n  order.sort((u1, u2) => {\n    for (let i = trackIndex; i >= 0; i--) {\n      const temp = allPoints.filter(point => point.trackIndex === i)\n      const u1pointArray = temp.filter(point => point.user.id === u1.id)\n      const u2pointArray = temp.filter(point => point.user.id === u2.id)\n      if (u1pointArray.length === 0 || u2pointArray.length === 0) {\n        return 0\n      }\n      const u1p = u1pointArray[0].points\n      const u2p = u2pointArray[0].points\n      if (u1p > u2p) {\n        return 1\n      } else if (u1p < u2p) {\n        return -1\n      }\n    }\n    return 0\n  })\n  console.log('order', order)\n  const orderOf = (player) => {\n    for (let i = 0; i < order.length; i++) {\n      if (player === order[i]) {\n        return i + 1 + '.'\n      }\n    }\n    return 'err'\n  }\n\n  if (maxTrackIndex + 1 === trackIndex) {\n    props.addNewTrack()\n  }\n  const trackNumbers = []\n  for (let i = 0; i < maxTrackIndex + 1; i++) {\n    trackNumbers.push(<th key={i}>{i + 1}</th>)\n  }\n  return (\n    <div className=\"App\">\n      <div>\n        <h3>{round.location.name}</h3>\n        <h3>\n          <button text='-' onClick={handleTrackIndexChangeClick(trackIndex - 1)}>-</button>\n          Track {trackIndex + 1}\n          <button text='+' onClick={handleTrackIndexChangeClick(trackIndex + 1)}>+</button>\n        </h3>\n        <table className=\"ui celled table\">\n          <thead>\n            <tr>\n              <th>order</th><th>player</th>\n              {\n                trackNumbers\n              }\n              <th>total</th>\n            </tr>\n          </thead>\n          <tbody>\n\n            {players.map(player => {\n              const playerPlays = allPoints.filter(point => point.user.id === player.id)\n              if (playerPlays) {\n                playerPlays.sort((p1, p2) => p1.trackIndex - p2.trackIndex)\n                const total = playerPlays.length === 0 ?\n                  0 : playerPlays.map(play => play.points).reduce((tot, point) => tot + point)\n                return (\n                  < tr key={player.id} >\n                    <td key='order'>{orderOf(player)}</td>\n                    <td key={player.username}>{player.username}</td>\n                    {\n                      playerPlays.map(play => {\n                        if (play.trackIndex === trackIndex) {\n                          return (<td key={play.trackIndex + player.id}><b>\n                            <button className=\"ui button\" onClick={handlePointChangeClick(play.points - 1, play.user)}>-</button>\n                            {play.points}\n                            <button className=\"ui button\" onClick={handlePointChangeClick(play.points + 1, play.user)}>+</button>\n                          </b>\n                          </td>)\n                        } else {\n                          return (<td key={play.trackIndex + player.id}>{play.points}</td>)\n                        }\n                      })\n                    }\n                    <td>{total}</td>\n                  </tr>\n                )\n              } else return (\n                <tr><td>no plays</td></tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n      <div>\n        <button className=\"ui button\" text='delete last track' onClick={handleDeleteLastTrackClick}>delete last track</button>\n      </div>\n      <div>\n        <button className=\"ui button\" text='finish round' onClick={handleRoundFinishClick}>finnish round</button>\n      </div>\n      {false && <div>round is finnished</div>}\n    </div>\n  )\n}\n\nexport default Round","import React from 'react'\n\nconst AddRound = (props) => {\n  if (!props.show) {\n    return null\n  }\n  const startNewRound = (event) => {\n    console.log('start new round with', currentLocation, currentUsers)\n    event.preventDefault()\n    props.startNewRound()\n  }\n  const finishRoundClicked = () =>\n    () => {\n      props.finishRound()\n    }\n  if (props.allLocationsQuery.loading || props.allUsersQuery.loading) {\n    console.log('loading')\n    return <div>loading...</div>\n  }\n  if (props.allLocationsQuery.error || props.allUsersQuery.error) {\n    console.log('errors', props.allUsersQuery.error, props.allLocationsQuery.error)\n    return <div>error...</div>\n  }\n  const allLocations = props.allLocationsQuery.data.allLocations\n  const allUsers = props.allUsersQuery.data.allUsers\n  const currentLocation = props.currentLocation\n  const currentUsers = props.currentUsers\n  if (!currentLocation) {\n    // select location\n    return (\n      <div>\n        <h3>Select location</h3>\n        <div>\n          <table className=\"ui celled table\">\n            <thead>\n              <tr key='header'>\n                <th>locations</th>\n              </tr>\n            </thead>\n            <tbody>\n              {allLocations.map(location =>\n                <tr key={location.id}>\n                  <td onClick={props.handleLocationClick(location)}>{location.name}</td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    )\n  }\n  return (\n    <div>\n      <h3>New round</h3>\n      <div onClick={props.handleLocationClick(currentLocation)}>\n        {currentLocation.name}\n      </div>\n      <div>\n        <table className=\"ui celled table\">\n          <thead>\n            <tr key='header'>\n              <th>selected players</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              {currentUsers.map(user =>\n                <td key={user.id} onClick={props.handleUserClick(user)}>{user.username}</td>\n              )}\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      {\n        currentUsers.length > 0 && currentLocation &&\n        <div>\n          <form onSubmit={startNewRound}>\n            <button className=\"ui button\" type='submit'>start</button>\n          </form>\n        </div>\n      }\n      <div>\n        <table className=\"ui celled table\">\n          <thead>\n            <tr>\n              <th>all players</th>\n            </tr>\n          </thead>\n          <tbody>\n            {allUsers.map(user =>\n              <tr key={user.id}>\n                <td onClick={props.handleUserClick(user)}>{user.username}</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n\n    </div>\n  )\n}\n\nexport default AddRound","import React from 'react'\n\nconst Rounds = (props) => {\n  if (!props.show) {\n    return null\n  }\n  if (props.result.loading) {\n    return <div>loading...</div>\n  }\n  if (props.result.error) {\n    console.log('error', props.result.error)\n    return <div>error...</div>\n  }\n  const handleRoundClick = (round) =>\n    () => {\n      console.log('round clicked', round)\n      props.setRound(round)\n    }\n  const rounds = props.result.data.allRounds\n  rounds.sort((r1, r2) => r2.date - r1.date)\n  console.log('all rounds', rounds)\n  if (!rounds) {\n    return null\n  }\n  return (\n    <div>\n      <table className=\"ui celled table\">\n        <thead>\n          <tr key='header'>\n            <th>location</th><th>date</th><th colSpan=\"99\">players</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rounds.map(round => {\n            const d = new Date(round.date)\n            const dateString = d.getDate() + '.' + (d.getMonth() + 1) + '.' + d.getFullYear() + ' ' + d.getHours() + ':' + d.getMinutes() + ':' + d.getSeconds()\n            return (\n              <tr onClick={handleRoundClick(round)} key={round.id}>\n                <td>{round.location.name}</td><td>{dateString}</td>\n                {round.users.map(user =>\n                  <td key={user.username}>{user.username}</td>\n                )}\n              </tr>\n            )\n          }\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Rounds","import React, { useState } from 'react'\n\nconst LoginForm = (props) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  if (!props.show) {\n    return null\n  }\n  const login = async (event) => {\n    event.preventDefault()\n    props.doLogin(username, password)\n  }\n  const onPasswordChange = (event) => {\n    setPassword(event.target.value)\n  }\n  const onUsernameChange = (event) => {\n    setUsername(event.target.value)\n  }\n  return (\n    <div className='login'>\n      <h2>Login to application</h2>\n      <form onSubmit={login} className=\"ui form\">\n        <div className=\"field\">\n          <label>Username</label>\n          <input id='username'\n            type=\"text\"\n            placeholder=\"username\"\n            value={username}\n            onChange={onUsernameChange} />\n        </div>\n        <div className=\"field\">\n          <label>Password</label>\n          <input id='password'\n            type=\"password\"\n            placeholder=\"password\"\n            value={password}\n            onChange={onPasswordChange} />\n        </div>\n        <button className=\"ui button\" type=\"submit\">\n          login\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default LoginForm","import gql from \"graphql-tag\";\nexport const LOGIN = gql`\nmutation login($username: String!, $password: String! ){\n  login(username: $username, password: $password){\n    token\n    username\n  }\n  \n}\n`\nexport const ALL_FRIENDS = gql`\n{\n  me {\n    username\n    id\n    friends{username, id}\n  }\n}\n`\nexport const ALL_LOCATIONS = gql`\n{\n  allLocations {\n    name\n    id\n  }\n}  \n`\nexport const ALL_ROUNDS = gql`\n{\n  allRounds {\n    users{username, id}\n    location{name, id}\n    date\n    id\n  }\n}\n`\nexport const ALL_POINTS = gql`\n  query ($roundId: ID!) {\n    allPoints(\n      roundId: $roundId\n    ){\n    trackIndex,\n    user{id, username},\n    round{id},\n    points,\n    id\n    }\n  }\n`\nexport const ALL_USERS = gql`\nquery {\n  allUsers{\n    username,\n    id\n  }\n}\n`\nexport const ME = gql`\n{\n  me{\n    username\n    id\n  }\n}\n`\nexport const ADD_LOCATION = gql`\n  mutation createLocation($name: String!){\n    addLocation(\n      name: $name\n    ){\n      id, name\n    }\n  }\n`\nexport const ADD_ROUND = gql`\n  mutation createRound($locationId: ID!, $userIds: [ID!]!){\n    addRound(\n      locationId: $locationId\n      userIds: $userIds\n    ){\n      location{\n        name\n        id\n      }\n      users{\n        username\n        id\n      }\n      date\n      id\n    }\n  }\n`\nexport const ADD_PLAY = gql`\n  mutation createPlay($roundId: ID!, $playNumber:Int!){\n    addPlay(\n      roundId: $roundId,\n      playNumber: $playNumber\n    ){\n      id\n    }\n  }\n`\nexport const ADD_POINT = gql`\n  mutation addPoint($roundId: ID!, $trackIndex:Int!, $userId: ID!, $points: Int!){\n    addPoint(\n      roundId: $roundId,\n      userId: $userId,\n      trackIndex: $trackIndex,\n      points: $points\n    ){\n      trackIndex,\n      user{id, username},\n      round{id},\n      points,\n      id\n    }\n  }\n`\n\nexport const ADD_NEW_TRACK = gql`\nmutation addNewTrack($roundId: ID!){\n  addNewTrack(\n    roundId: $roundId\n  ){\n    trackIndex,\n    user{id, username},\n    round{id},\n    points,\n    id\n  }\n}\n`\n\nexport const DELETE_LAST_TRACK = gql`\nmutation deleteLastTrack($roundId: ID!){\n  deleteLastTrack(\n    roundId: $roundId\n  )\n}\n`","import React, { useState, useEffect } from 'react';\nimport { useQuery, useMutation, useApolloClient } from 'react-apollo-hooks'\nimport { Container, Menu, Router } from 'semantic-ui-react'\nimport Round from './components/Round'\nimport AddRound from './components/AddRound'\nimport Rounds from './components/Rounds'\nimport LoginForm from './components/LoginForm'\nimport Friends from './components/Friends'\nimport Me from './components/Me'\nimport {\n  ALL_FRIENDS,\n  ALL_LOCATIONS,\n  ALL_ROUNDS,\n  ALL_POINTS,\n  ALL_USERS,\n  LOGIN,\n  ADD_LOCATION,\n  ADD_ROUND,\n  ADD_POINT,\n  ADD_NEW_TRACK,\n  DELETE_LAST_TRACK\n} from './querys'\n\n\nfunction App() {\n  const [currentRoundId, setCurrentRoundId] = useState(null)\n  const [currentRound, setCurrentRound] = useState(null)\n  //  const [currentUsers, setCurrentPlayers] = useState([\"5d18f79935fc7623c728bed7\", \"5d19bb0b462f0454243492d9\"])\n  const [currentUsers, setCurrentPlayers] = useState([])\n  const [currentLocation, setCurrentLocation] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [trackIndex, setTrackIndex] = useState(0)\n  const [token, setToken] = useState(null)\n  const [username, setUsername] = useState(null)\n  const [page, setPage] = useState(\"main\")\n  const client = useApolloClient()\n\n  useEffect(() => {\n    //setToken(localStorage.getItem('token'))\n    const username = localStorage.getItem('username')\n    const token = localStorage.getItem('token')\n    console.log('restore logged user', username, token)\n    setToken(token)\n    setUsername(username)\n  }, [])\n\n  const doLogin = async (username, password) => {\n    const response = await loginMutation({\n      variables: {\n        username,\n        password\n      }\n    })\n    const token = response.data.login.token\n    const tusername = response.data.login.username\n    console.log('login token and username', token, tusername)\n    if (token) {\n      //localStorage.setItem('token', token)\n      setToken(token)\n      setUsername(username)\n      localStorage.setItem('username', tusername)\n      localStorage.setItem('token', token)\n      setPage('main')\n      client.resetStore()\n    }\n  }\n\n  const doLogout = () => {\n    console.log('logout')\n    setToken(null)\n    setUsername(null)\n    localStorage.clear()\n    client.resetStore()\n  }\n\n  const handleError = (error) => {\n    console.log('error', error)\n    if (error.graphQLErrors.length > 0) {\n      setErrorMessage(error.graphQLErrors[0].message)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 10000)\n    }\n    else if (error.networkError) {\n      const errorArray = error.networkError.result.errors\n      if (errorArray && errorArray.length > 0) {\n        setErrorMessage(errorArray[0].message)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 10000)\n      }\n    }\n  }\n  /*\n  if (!allUsersQuery.loading && !allUsersQuery.error && allUsersQuery.data) {\n    setCurrentPlayers(allUsersQuery.data.allUsers)\n  }\n  */\n  const addPointMutation = useMutation(ADD_POINT, {\n    onError: handleError,\n    update: (store, response) => {\n      console.log('add point response', response)\n      let dataInStore = store.readQuery({\n        query: ALL_POINTS,\n        variables: {\n          roundId: currentRoundId\n        },\n      })\n      console.log('data in store before point update', dataInStore.allPoints)\n      const addedPoint = response.data.addPoint\n      console.log('added point', addedPoint)\n      const temp = dataInStore.allPoints.filter(point => point.id !== addedPoint.id).concat(addedPoint)\n      console.log('store after', temp)\n      client.writeQuery({\n        query: ALL_POINTS,\n        variables: {\n          roundId: currentRoundId\n        },\n        data: { allPoints: temp }\n      })\n    }\n  })\n  const deleteLastTrackMutation = useMutation(DELETE_LAST_TRACK, {\n    onError: handleError,\n    update: (store, response) => {\n      const deletedTrackIndex = response.data.deleteLastTrack\n      console.log('deleted track index', deletedTrackIndex)\n\n      if (deletedTrackIndex > -1) {\n        const dataInStore = store.readQuery({\n          query: ALL_POINTS,\n          variables: {\n            roundId: currentRoundId\n          },\n        })\n        console.log('points before deletion', dataInStore.allPoints)\n        const temp = dataInStore.allPoints.filter(point => point.trackIndex !== deletedTrackIndex)\n        console.log('filtered', temp)\n        client.writeQuery({\n          query: ALL_POINTS,\n          variables: {\n            roundId: currentRoundId\n          },\n          data: { allPoints: temp }\n        })\n        if (trackIndex > deletedTrackIndex - 1) {\n          setTrackIndex(deletedTrackIndex - 1)\n        }\n        const dataInStoreAfter = store.readQuery({\n          query: ALL_POINTS,\n          variables: {\n            roundId: currentRoundId\n          },\n        })\n        console.log('data in store after deletion', dataInStoreAfter.allPoints, 'track index now', trackIndex)\n      }\n    }\n  })\n\n  const addNewTrackMutation = useMutation(ADD_NEW_TRACK, {\n    onError: handleError,\n    update: (store, response) => {\n      let dataInStore = store.readQuery({\n        query: ALL_POINTS,\n        variables: {\n          roundId: currentRoundId\n        },\n      })\n      console.log('data in store before new track push', dataInStore.allPoints)\n      console.log('new track response', response.data)\n      const newTrackPoints = response.data.addNewTrack\n      console.log('returned data', newTrackPoints)\n      if (newTrackPoints && newTrackPoints.length > 0) {\n        let temp = dataInStore.allPoints\n        for (let i = 0; i < newTrackPoints.length; i++) {\n          temp.push(newTrackPoints[i])\n        }\n        console.log('new points', temp)\n        client.writeQuery({\n          query: ALL_POINTS,\n          variables: {\n            roundId: currentRoundId\n          },\n          data: { allPoints: temp }\n        })\n        console.log('new track index', newTrackPoints[0].trackIndex)\n        setTrackIndex(newTrackPoints[0].trackIndex)\n        dataInStore = store.readQuery({\n          query: ALL_POINTS,\n          variables: {\n            roundId: currentRoundId\n          },\n        })\n        console.log('data in store after new track push', dataInStore)\n      }\n    }\n  })\n  const addRoundMutation = useMutation(ADD_ROUND, {\n    onError: handleError,\n    update: (store, response) => {\n      console.log('add round response', response)\n      let dataInStore = store.readQuery({\n        query: ALL_ROUNDS\n      })\n      console.log('data in store before round update', dataInStore.allRounds)\n      const addedRound = response.data.addRound\n      console.log('added round', addedRound)\n      const temp = dataInStore.allRounds.filter(round => round.id !== addedRound.id).concat(addedRound)\n      console.log('store after', temp)\n      client.writeQuery({\n        query: ALL_ROUNDS,\n        data: { allRounds: temp }\n      })\n    }\n  })\n  const loginMutation = useMutation(LOGIN, {\n    onError: handleError\n  })\n  const addNewTrack = async () => {\n    //console.log('add new track to round', roundId)\n    //try {\n    let response = await addNewTrackMutation({\n      variables: {\n        roundId: currentRoundId\n      }\n    })\n    const points = response.data\n    //console.log('response', response.data)\n    /*\n    } catch (error) {\n      handleError(error)\n    }*/\n  }\n  const deleteLastTrack = async () => {\n    console.log('delete last track')\n    try {\n      const response = await deleteLastTrackMutation({\n        variables: {\n          roundId: currentRoundId\n        }\n      })\n      console.log('response', response.data)\n    } catch (error) {\n      handleError(error)\n    }\n  }\n  const updatePoint = async (points, userId) => {\n    //console.log('add point with points and userId', points, userId)\n    try {\n      const response = await addPointMutation({\n        variables: {\n          points: points,\n          trackIndex: trackIndex,\n          userId: userId,\n          roundId: currentRoundId\n        }\n      })\n      //console.log('response', response.data)\n    } catch (error) {\n      handleError(error)\n    }\n  }\n\n  const changeTrack = (index) => {\n    setTrackIndex(index)\n  }\n  const setNewRound = (round) => {\n    console.log('round', round)\n    setCurrentRound(round)\n    setCurrentRoundId(round.id)\n    setTrackIndex(-1)\n  }\n  const allLocationsQuery = useQuery(ALL_LOCATIONS)\n  const allUsersQuery = useQuery(ALL_USERS, {\n    skip: false\n  })\n  const allPointsQuery = useQuery(ALL_POINTS, {\n    skip: !currentRoundId,\n    variables: {\n      roundId: currentRoundId\n    },\n  })\n\n  const allRoundsQuery = useQuery(ALL_ROUNDS, {\n    skip: false\n  })\n  const handleLocationClick = (location) =>\n    () => {\n      console.log('location clicked', location)\n      if (location === currentLocation) {\n        setCurrentLocation(null)\n      } else {\n        setCurrentLocation(location)\n      }\n    }\n  const handleUserClick = (user) =>\n    () => {\n      console.log('user clicked', user)\n      if (currentUsers.includes(user)) {\n        setCurrentPlayers(currentUsers.filter(player => player !== user))\n      } else {\n        setCurrentPlayers(currentUsers.concat(user))\n      }\n    }\n  const startNewRound = async () => {\n    console.log('start new round', currentLocation.name, currentUsers.map(user => user.username))\n    const response = await addRoundMutation(\n      {\n        variables: {\n          userIds: currentUsers.map(user => user.id),\n          locationId: currentLocation.id\n        }\n      }\n    )\n    console.log('response', response)\n    setCurrentLocation(null)\n    setCurrentPlayers([])\n    setCurrentRound(response.data.addRound)\n    setCurrentRoundId(response.data.addRound.id)\n  }\n  const finishRound = () => {\n    console.log('finish round')\n    setCurrentRound(null)\n    setCurrentRoundId(null)\n    setCurrentPlayers([])\n    setCurrentLocation(null)\n    setPage('main')\n  }\n  return (\n    <Container>\n      {token &&\n        <div className=\"ui secondary menu\">\n          <div className=\"item\" onClick={() => { setPage('main'); console.log('main') }}>main</div>\n          {currentRoundId ?\n            <div className=\"item\" onClick={() => { setPage('round'); console.log('continue round') }}>continue round</div>\n            : <div className=\"item\" onClick={() => { setPage('round'); console.log('new round') }}>new round</div>\n          }\n          <div className=\"item\">{username} logged in</div>\n          <div className=\"item\" onClick={() => { setPage(null); doLogout() }}>logout</div>\n\n        </div>\n      }\n      {errorMessage && <div>errorMessage</div>}\n      {\n        !token &&\n        <LoginForm\n          doLogin={doLogin}\n          show={true}\n          handleError={handleError} />\n      }\n      {token && !currentRoundId && <AddRound\n        allLocationsQuery={allLocationsQuery}\n        allUsersQuery={allUsersQuery}\n        handleLocationClick={handleLocationClick}\n        handleUserClick={handleUserClick}\n        currentLocation={currentLocation}\n        currentUsers={currentUsers}\n        startNewRound={startNewRound}\n        show={page === 'round'}\n      />}\n      {token && <Rounds\n        result={allRoundsQuery}\n        setRound={setNewRound}\n        show={page === 'main'}\n      />}\n      {token && currentRoundId && <Round\n        allPointsQuery={allPointsQuery}\n        round={currentRound}\n        addNewTrack={addNewTrack}\n        updatePoint={updatePoint}\n        deleteLastTrack={deleteLastTrack}\n        changeTrack={changeTrack}\n        trackIndex={trackIndex}\n        finishRound={finishRound}\n        show={page === 'round'}\n      />}\n      <div>\n        <br />\n        <em>Frisbeegolf app, Juho Taipale 2019</em>\n      </div>\n    </Container>\n  )\n\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport { ApolloProvider } from 'react-apollo'\nimport { ApolloProvider as ApolloHooksProvider } from 'react-apollo-hooks'\n\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { setContext } from 'apollo-link-context'\n\nimport { split } from 'apollo-link'\nimport { WebSocketLink } from 'apollo-link-ws'\nimport { getMainDefinition } from 'apollo-utilities'\nconst wshost = window.location.origin.replace(/^http/, 'ws')\nconst wsuri = `${wshost}/graphql`\nconsole.log('websocket uri', wsuri)\nconst wsLink = new WebSocketLink({\n  //  uri: `ws://localhost:4000/graphql`,\n  uri: wsuri,\n  options: { reconnect: true }\n})\n\nconst httpLink = createHttpLink({\n  //  uri: 'http://localhost:4000/graphql',\n  uri: '/graphql',\n})\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('loggedToken')\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token}` : null,\n    }\n  }\n})\n\nconst link = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query)\n    return kind === 'OperationDefinition' && operation === 'subscription'\n  },\n  wsLink,\n  authLink.concat(httpLink),\n)\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ApolloHooksProvider client={client}>\n      <App />\n    </ApolloHooksProvider>\n  </ApolloProvider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}